---
import type { HTMLTag, Polymorphic } from "astro/types"

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }>

const { as: Tag, class: className, ...props } = Astro.props
---

<Tag class:list={["action *:duration-500 motion-reduce:*:duration-0", className]} {...props}>
	<span><slot /></span>
</Tag>

<style>
	.action {
		padding: 10px 20px;
		display: inline-block;
		font-weight: 600;
		text-transform: uppercase;
		cursor: pointer;
		transform: skew(-21deg);
		color: var(--color-primary);
		border: 2px solid var(--color-primary);
	}

	.action[aria-disabled="true"] {
		background: #666;
		color: #111;
		pointer-events: none;
		border-color: #666;
	}

	.action > span {
		display: inline-block;
		transform: skew(21deg);
	}

	.action::before {
		content: "";
		position: absolute;
		inset: -2px;
		background: var(--color-primary);
		transform: scaleX(0);
		transform-origin: right; /* To end from left to right */
	}

	.action:hover {
		color: var(--color-secondary);
		scale: 1.1;
	}

	.action:hover::before {
		transform: scaleX(1);
		transform-origin: left; /* To start from left to right */
	}

	@media (prefers-reduced-motion: no-preference) {
		.action {
			transition:
				color 0.15s ease-in,
				scale 0.15s ease-in;
		}
		.action::before {
			transition: transform 0.3s ease-in;
		}

		/* Added delay to simulate a hover attempt */
		.action:hover {
			transition:
				color 0.15s ease-out 0.1s,
				scale 0.15s ease-out 0.1s;
		}

		/* Added delay to simulate a hover attempt */
		.action:hover::before {
			transition: transform 0.3s ease-out 0.1s;
		}
	}
</style>
