---
import Typography from "@/components/Typography.astro"
import { BOXERS } from "@/consts/boxers"
import { COUNTRIES } from "@/consts/countries"

const listOfBoxers = BOXERS.map((boxer) => {
	const { country } = boxer
	const countryName = COUNTRIES[country]?.name || ""
	return { ...boxer, countryName }
})

const msFadeLuchador = 150
---

<section class="my-40">
	<Typography
		as="h3"
		variant="atomic-title"
		color="primary"
		class:list={"text-center"}
		id="selectedBoxer"
	>
		elige tu luchador
	</Typography>

	<Typography as="p" variant="body" color="neutral" class="mt-4 text-center">
		Conoce los detalles de cada boxeador
	</Typography>

	<div class="flex flex-col items-center justify-center gap-8">
		<article
			data-transition-duration={msFadeLuchador}
			class="relative flex w-full flex-col items-center justify-center"
			style="view-transition-name: boxer;"
		>
			<header class="relative flex w-full flex-col items-center justify-center">
				<div
					class="absolute inset-0 -z-20 m-auto bg-center bg-no-repeat"
					style="
						background-image: url('/img/effects/boxer-background.png');
						background-size: 75%;
						mask-image: radial-gradient(circle at bottom, transparent 26%, #000 40%);
						"
				>
				</div>
				<picture
					transition:name="boxer-big-image"
					class:list={"boxer-photo h-auto object-contain px-10 sm:w-[30vw] sm:px-0 xl:w-[19vw] 3xl:h-[600px] 3xl:w-[480px]"}
				>
					<source srcset="/img/boxers/el-mariana-big.avif" type="image/avif" />
					<img
						class:list={"boxer-photo h-auto object-contain px-10 sm:w-[30vw] sm:px-0 xl:w-[19vw] 3xl:h-[600px] 3xl:w-[480px]"}
						alt="Fotografía de El Mariana"
						src="/img/boxers/el-mariana-big.avif"
						style="
							filter: drop-shadow(0 0 20px rgba(0, 0, 0, .5));
							mask-image: linear-gradient(to bottom, black 80%, transparent 100%);
						"
					/>
				</picture>

				<div class="absolute bottom-14 max-w-md text-wrap">
					<Typography
						as="h4"
						variant="boxer-title"
						color="primary"
						class:list={"boxer-title -skew-y-6 text-center"}
					>
						el mariana
					</Typography>
				</div>

				<img
					class:list={`boxer-flag pointer-events-none aspect-[3/2] h-auto w-20 object-contain object-center transition duration-[${msFadeLuchador}] 3xl:w-24`}
					alt="Bandera de México"
					src="/img/flags/mx.webp"
				/>
			</header>

			<footer
				id="boxer-footer"
				class="absolute bottom-0 hidden w-full justify-between text-center text-white transition duration-200 xl:flex"
			>
				<div class="flex flex-col gap-y-2">
					<h4 class="text-lg">País</h4>
					<p class="text-lg font-bold">México</p>
					<a
						href="#"
						class="mt-10 inline-block font-semibold text-accent transition hover:scale-110"
					>
						Ver combate
					</a>
				</div>

				<div class="flex flex-col gap-y-2">
					<h4 class="text-lg">Peso</h4>
					<p class="text-lg font-bold">61 kg</p>
					<a
						href="#"
						class="mt-10 inline-block font-semibold text-accent transition hover:scale-110"
					>
						Ver perfil
					</a>
				</div>
			</footer>
		</article>
		<aside class="boxers-aside">
			<div class="blur"><div class="clip-black"></div></div>
			<nav class="boxers-nav">
				{
					listOfBoxers.map(({ id, name, country, countryName }) => (
						<a
							href={`/boxers/${id}`}
							class="boxer-link"
							title={`Visita la página del boxeador ${name}`}
							data-id={id}
							data-name={name}
							data-country={country}
							data-country-name={countryName}
						>
							<div class="boxer-link-background" />
							<picture class="boxer-image">
								<source srcset={`/img/boxers/${id}-small.avif`} type="image/avif" />
								<img
									loading="lazy"
									src={`/img/boxers/${id}-small.webp`}
									alt={`Foto en pequeño del boxeador ${name}`}
									class="boxer-image"
								/>
							</picture>
						</a>
					))
				}
			</nav>
		</aside>
	</div>
</section>

<script>
	const article = document.querySelector("article") as HTMLElement
	const boxerLinks = document.querySelectorAll(".boxer-link")
	const boxerTitle = document.querySelector(".boxer-title") as HTMLImageElement
	const boxerPhoto = document.querySelector(".boxer-photo") as HTMLPictureElement
	const boxerCountry = document.querySelector(".boxer-flag") as HTMLImageElement

	boxerLinks.forEach((link) => {
		link.addEventListener("mouseenter", (event) => {
			const { id, name, country, countryName } = (event.currentTarget as HTMLElement)?.dataset
			link.classList.add("active")
			setTimeout(
				() => {
					const boxerSrc = `/img/boxers/${id}-big`

					boxerPhoto.getElementsByTagName("source")[0].srcset = `${boxerSrc}.avif`
					boxerPhoto.getElementsByTagName("img")[0].src = `${boxerSrc}.webp`
					boxerTitle.innerText = name?.toLocaleLowerCase() ?? ""
					boxerCountry.src = `/img/flags/${country}.webp`

					boxerPhoto.getElementsByTagName("img")[0].alt = `Fotografía de ${name}`
					boxerCountry.alt = `Bandera de ${countryName}`
				},
				article.getAttribute("data-transition-duration") as unknown as number
			)
		})
		link.addEventListener("mouseleave", () => {
			link.classList.remove("active")
		})
	})
</script>

<style>
	.boxers-aside {
		display: flex;
		max-width: 100vw;
		height: 8rem;
		overflow-x: scroll;
		position: relative;
		scrollbar-width: none;
	}

	.boxers-nav {
		display: flex;
		gap: 0.5rem;
		height: 100%;

		padding: 1rem 5rem;
	}

	.boxer-link {
		@apply size-40;

		position: relative;
		display: flex;
		align-items: center;
		flex-direction: column;
		transition: opacity 0.3s ease;
	}

	.boxer-link-background {
		position: absolute;
		width: 100%;
		bottom: 0;
		display: block;
		background: linear-gradient(
			180deg,
			rgba(255, 255, 255, 1) 0%,
			rgba(255, 255, 255, 0.5) 30%,
			rgba(0, 0, 0, 0) 95%
		);
		opacity: 0.25;
		height: 60%;
		transition: filter 0.3s ease-in-out;
	}

	.boxer-link:hover {
		opacity: 0.9;
	}

	.boxer-image {
		object-fit: contain;
		z-index: 2;
		transition: all 0.3s ease-in-out;
		height: 100%;
		mask-image: linear-gradient(to bottom, black 85%, transparent 100%);
	}

	.boxer-link:hover .boxer-image {
		transform: scale(1.05);
	}
	.boxer-link .boxer-image {
		filter: grayscale(100%);
		transition: filter 0.3s ease;
	}

	.boxer-link.active .boxer-image {
		filter: grayscale(0%);
	}
	.boxer-link:hover .boxer-link-background {
		filter: brightness(0.5);
	}

	@media (min-width: 1280px) {
		.boxers-aside {
			padding: 0.5rem 0;
			display: block;
			max-width: none;
			width: 100%;
			overflow: hidden;
			height: auto;
		}

		.boxers-nav {
			@apply grid w-full max-w-6xl gap-y-0 overflow-hidden;
			grid-template-columns: repeat(6, 1fr);
		}

		.boxer-link {
			@apply flex items-center justify-center;
			width: 100%;
		}

		.boxer-image {
			@apply h-full;
		}
	}

	@media (max-width: 1650px) {
		.boxers-aside.up {
			margin-top: -15rem;
		}
	}
</style>
